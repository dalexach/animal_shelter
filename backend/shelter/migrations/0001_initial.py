# Generated by Django 5.1.1 on 2024-10-08 09:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nombre_completo", models.CharField(max_length=100)),
                ("numero_celular", models.CharField(max_length=20)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="usuario_set",
                        related_query_name="usuario",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="usuario_set",
                        related_query_name="usuario",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Animal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("especie", models.CharField(max_length=100)),
                ("habitat", models.CharField(max_length=100)),
                ("tipo_comida", models.CharField(max_length=100)),
                ("marca_comida", models.CharField(max_length=100)),
                ("necesidades_aseo", models.TextField()),
                ("necesidades_aseo_habitat", models.TextField()),
                ("fecha_nacimiento", models.DateField(blank=True, null=True)),
                (
                    "imagen",
                    models.ImageField(blank=True, null=True, upload_to="animales/"),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Administrador",
            fields=[
                (
                    "usuario_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("asignar_animal_cuidador", "Puede asignar animal a cuidador"),
                    ("generar_reporte", "Puede generar reporte"),
                ],
            },
            bases=("shelter.usuario",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Cuidador",
            fields=[
                (
                    "usuario_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("registrar_condicion_salud", "Puede registrar condición de salud"),
                    ("registrar_dato_veterinario", "Puede registrar dato veterinario"),
                    ("registrar_indicador_salud", "Puede registrar indicador de salud"),
                    ("registrar_control_medico", "Puede registrar control médico"),
                    (
                        "registrar_seguimiento_condicion",
                        "Puede registrar seguimiento de condición",
                    ),
                ],
            },
            bases=("shelter.usuario",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Alergia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField()),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alergias",
                        to="shelter.animal",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Medicamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("dosis", models.CharField(max_length=100)),
                ("frecuencia", models.CharField(max_length=100)),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicamentos",
                        to="shelter.animal",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reporte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha_inicio", models.DateField()),
                ("fecha_fin", models.DateField()),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("ANIMAL", "Por Animal"),
                            ("CUIDADOR", "Por Cuidador"),
                        ],
                        max_length=10,
                    ),
                ),
                ("contenido", models.JSONField(default=dict)),
                (
                    "generado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shelter.administrador",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SeguimientoCondicion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("observaciones", models.TextField()),
                ("tipo", models.CharField(max_length=50)),
                ("fecha_incidente", models.DateField()),
                ("diagnostico", models.TextField()),
                ("tratamiento", models.TextField()),
                ("evolucion", models.TextField()),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_registros",
                        to="shelter.animal",
                    ),
                ),
                (
                    "registrado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shelter.cuidador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Seguimiento de Condición",
                "verbose_name_plural": "Seguimientos de Condición",
            },
        ),
        migrations.CreateModel(
            name="IndicadorSalud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("observaciones", models.TextField()),
                ("tipo", models.CharField(max_length=50)),
                ("peso", models.FloatField(blank=True, null=True)),
                ("vacunas", models.JSONField(default=list)),
                ("estado_fisico", models.CharField(max_length=100)),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_registros",
                        to="shelter.animal",
                    ),
                ),
                (
                    "registrado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shelter.cuidador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Indicador de Salud",
                "verbose_name_plural": "Indicadores de Salud",
            },
        ),
        migrations.CreateModel(
            name="DatoVeterinario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("observaciones", models.TextField()),
                ("tipo", models.CharField(max_length=50)),
                ("procedimiento", models.CharField(max_length=200)),
                ("resultado_examen", models.TextField()),
                ("recomendaciones", models.TextField()),
                ("imagenes", models.JSONField(default=list)),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_registros",
                        to="shelter.animal",
                    ),
                ),
                (
                    "registrado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shelter.cuidador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dato Veterinario",
                "verbose_name_plural": "Datos Veterinarios",
            },
        ),
        migrations.CreateModel(
            name="ControlMedico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("observaciones", models.TextField()),
                ("tipo", models.CharField(max_length=50)),
                ("nombre_profesional", models.CharField(max_length=100)),
                ("especialidad", models.CharField(max_length=100)),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_registros",
                        to="shelter.animal",
                    ),
                ),
                (
                    "registrado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shelter.cuidador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Control Médico",
                "verbose_name_plural": "Controles Médicos",
            },
        ),
        migrations.AddField(
            model_name="animal",
            name="cuidadores",
            field=models.ManyToManyField(
                related_name="animales", to="shelter.cuidador"
            ),
        ),
    ]
